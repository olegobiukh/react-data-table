{"version":3,"sources":["Api/index.js","App/components/Pagination.js","App/components/Search.js","App/components/Select.js","config.js","App/DataTable.js","Phone/index.js","App/index.js","index.js"],"names":["BASE_URL","getAll","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","phones","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","stop","apply","this","arguments","getCurrentPhone","_ref2","_callee2","phone","data","_context2","_x","Pagination","isTop","_ref$page","page","_ref$count","count","_ref$perPage","perPage","onPageChange","pagesCount","Math","ceil","pages","i","push","react_default","createElement","className","onClick","map","item","key","length","Search","onChangeQuery","visibleQuery","type","placeholder","aria-label","onChange","value","Select","onPerPageChange","config","name","title","isSortable","isSearchable","age","snippet","DataTable","visibleItems","onHeaderClick","onHandleCheck","checkedItems","onMainCheck","filteredItems","showChecked","onShowAllChecked","checked","bind","keys","id","includes","react_router_dom","to","components_Select","Phone","state","updatePhone","props","match","params","location","pathname","setState","hardware","images","display","battery","android","os","cpu","screenSize","touchScreen","Component","App","items","isLoading","sortColumn","sortAsc","query","handlePerPageChange","event","_this","target","handleHeaderClick","newPhones","_this$state","sign","sortFn","b","localeCompare","toConsumableArray","sort","handlePageChange","paginateItems","start","end","slice","handleChangeQuery","updateQuery","debounce","url","setParams","history","window","replaceState","handleCheck","newArr","filter","handleMainCheck","_this$state2","toLowerCase","isMainChecked","handleShowAllChecked","_this$state3","getfilteredItems","filtered","isLoaded","_ref3","searchParams","URLSearchParams","set","toString","_this$state4","components_Pagination","App_DataTable","components_Search","react_router","path","component","React","rootElement","document","getElementById","ReactDOM","render","basename","process"],"mappings":"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","file":"static/js/main.4d6cda05.chunk.js","sourcesContent":["const BASE_URL =\r\n  \"https://mate-academy.github.io/phone-catalogue-static/api/phones\";\r\n//https://mate-academy.github.io/phone-catalogue-static/api/phones/motorola-xoom-with-wi-fi.json\r\nexport const getAll = async () => {\r\n  const response = await fetch(`${BASE_URL}.json`);\r\n  const phones = await response.json();\r\n\r\n  return phones;\r\n};\r\n\r\nexport const getCurrentPhone = async phone => {\r\n  const response = await fetch(`${BASE_URL}/${phone}.json`);\r\n  const data = await response.json();\r\n\r\n  return data;\r\n};\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({\r\n  isTop,\r\n  page = 1,\r\n  count = 20,\r\n  perPage = 3,\r\n  onPageChange\r\n}) => {\r\n  const pagesCount = Math.ceil(count / perPage) + 1;\r\n\r\n  const pages = [];\r\n\r\n  for (let i = 1; i < pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n  if (!isTop) {\r\n    return (\r\n      <div className=\"Pagination\">\r\n        {pages.map(item => (\r\n          <button\r\n            key={item}\r\n            className={\r\n              item === page\r\n                ? \"Pagination__active Pagination__btn\"\r\n                : \"Pagination__btn\"\r\n            }\r\n            onClick={() => onPageChange(item)}\r\n          >\r\n            {item}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"Pagination\">\r\n        {page !== 1 && (\r\n          <button\r\n            className=\"Pagination__back\"\r\n            onClick={() => onPageChange(page - 1)}\r\n          >\r\n            &#8592;\r\n          </button>\r\n        )}\r\n        {pages.map(item => {\r\n          if (item === page || item === page + 1 || item === page - 1) {\r\n            return (\r\n              <button\r\n                key={item}\r\n                className={\r\n                  item === page\r\n                    ? \"Pagination__active Pagination__btn\"\r\n                    : \"Pagination__btn\"\r\n                }\r\n                onClick={() => onPageChange(item)}\r\n              >\r\n                {item}\r\n              </button>\r\n            );\r\n          }\r\n        })}\r\n        {page !== pages.length && (\r\n          <button\r\n            className=\"Pagination__next\"\r\n            onClick={() => onPageChange(page + 1)}\r\n          >\r\n            &#8594;\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst Search = ({ onChangeQuery, visibleQuery }) => {\r\n  return (\r\n    <div className=\"md-form active-purple active-purple-2 mb-3\">\r\n      <input\r\n        className=\"Search\"\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        aria-label=\"Search\"\r\n        onChange={onChangeQuery}\r\n        value={visibleQuery}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ perPage = 3, onPerPageChange }) => {\r\n  return (\r\n    <select\r\n      className=\"Select browser-default custom-select\"\r\n      onChange={onPerPageChange}\r\n      value={perPage}\r\n    >\r\n      <option value=\"3\">3</option>\r\n      <option value=\"5\">5</option>\r\n      <option value=\"10\">10</option>\r\n      <option value=\"20\">20</option>\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","const config = {\r\n  name: {\r\n    title: \"Название\", // в таблице колонка будет так называться\r\n    isSortable: true, // Поиск будет проверять эту и последнюю колонки\r\n    isSearchable: true\r\n  },\r\n  age: {\r\n    title: \"Возраст\",\r\n    isSortable: true // по этой колонке можно сортировать\r\n  },\r\n  snippet: {\r\n    // Только для тех ключей которые есть в columnConfig будут колонки в таблице\r\n    title: \"Описание\",\r\n    isSearchable: true // В этой колонке тоже будет происходить поиск query\r\n  }\r\n};\r\n\r\nexport default config;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Select from \"./components/Select\";\r\nimport config from \"../config\";\r\n\r\nconst DataTable = ({\r\n  visibleItems,\r\n  onHeaderClick,\r\n  onHandleCheck,\r\n  checkedItems,\r\n  onMainCheck,\r\n  filteredItems,\r\n  showChecked,\r\n  onShowAllChecked,\r\n  perPage,\r\n  onPerPageChange\r\n}) => {\r\n  return (\r\n    <div className=\"Table-wrapper\">\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr className=\"thead-dark Table__headers\">\r\n            <th>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={checkedItems.length === filteredItems.length}\r\n                onChange={onMainCheck.bind(this)}\r\n                name=\"main\"\r\n                value=\"main\"\r\n              />\r\n            </th>\r\n            {Object.keys(config).map(key => (\r\n              <th\r\n                key={key}\r\n                className={config[key].isSortable && \"Table__sorting\"}\r\n                onClick={\r\n                  config[key].isSortable ? () => onHeaderClick(key) : null\r\n                }\r\n              >\r\n                {key}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {visibleItems.map(item => {\r\n            return (\r\n              <tr key={item.id}>\r\n                <td>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={checkedItems.includes(item.id)}\r\n                    onChange={onHandleCheck.bind(this)}\r\n                    name={item.id}\r\n                    value={item.id}\r\n                  />\r\n                </td>\r\n                {Object.keys(config).map(key => {\r\n                  if (key === \"name\") {\r\n                    return (\r\n                      <td key={key}>\r\n                        <NavLink to={`/${item.id}`}>{item[key]}</NavLink>\r\n                      </td>\r\n                    );\r\n                  }\r\n\r\n                  return <td key={key}>{item[key]}</td>;\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <button className=\"CheckAll__btn\" onClick={onShowAllChecked.bind(this)}>\r\n        {showChecked ? \"Show all\" : \"Show checked\"}\r\n      </button>\r\n      <Select perPage={perPage} onPerPageChange={onPerPageChange.bind(this)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { getCurrentPhone } from \"../Api\";\r\n\r\nclass Phone extends Component {\r\n  state = {\r\n    phone: \"\",\r\n    data: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updatePhone();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updatePhone();\r\n  }\r\n\r\n  async updatePhone() {\r\n    const { phone } = this.props.match.params || \"\";\r\n    const { location } = this.props;\r\n\r\n    location.pathname = \"\";\r\n\r\n    if (phone === this.state.phone) {\r\n      return;\r\n    }\r\n\r\n    const data = await getCurrentPhone(phone);\r\n    if (this.state.phone === data.id) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      phone,\r\n      data\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    const { name, images, hardware, display, battery, android } = data || \"\";\r\n\r\n    if (data) {\r\n      return (\r\n        <div className=\"Details float-right\">\r\n          <p>\r\n            <span className=\"Details__title\">Name:</span> {name}\r\n          </p>\r\n          <p>\r\n            <span className=\"Details__title\">OS:</span> {android.os}\r\n          </p>\r\n          <p>\r\n            <span className=\"Details__title\">CPU:</span> {hardware.cpu}\r\n          </p>\r\n          <p>\r\n            <span className=\"Details__title\">Screen size:</span>{\" \"}\r\n            {display.screenSize}\r\n          </p>\r\n          <p>\r\n            <span className=\"Details__title\">Touchscreen:</span>{\" \"}\r\n            {display.touchScreen ? \"Yep\" : \"Nope\"}\r\n          </p>\r\n          <p>\r\n            <span className=\"Details__title\">Battary:</span> {battery.type}\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>The phone is loading ...</div>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Phone;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport debounce from \"lodash/debounce\";\r\n\r\nimport { getAll } from \"../Api\";\r\n\r\nimport Pagination from \"./components/Pagination\";\r\nimport Search from \"./components/Search\";\r\nimport Select from \"./components/Select\";\r\nimport DataTable from \"./DataTable\";\r\nimport Phone from \"../Phone\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    items: null,\r\n    isLoading: false,\r\n    sortColumn: null,\r\n    sortAsc: true, // sorting\r\n    perPage: 3, // pagination\r\n    page: 1,\r\n    query: \"\",\r\n    visibleQuery: \"\",\r\n    checkedItems: [],\r\n    showChecked: false\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const phones = await getAll();\r\n    this.setState({ items: phones, isLoaded: true });\r\n  }\r\n\r\n  //select\r\n  handlePerPageChange = event => {\r\n    this.setState({\r\n      perPage: +event.target.value,\r\n      page: 1,\r\n      query: \"\",\r\n      visibleQuery: \"\"\r\n    });\r\n  };\r\n\r\n  // sorting works\r\n  handleHeaderClick = key => {\r\n    const { items, sortAsc } = this.state;\r\n    let newPhones = [];\r\n\r\n    const sign = sortAsc ? 1 : -1;\r\n    const sortFn =\r\n      typeof items[0][key] === \"number\"\r\n        ? (a, b) => sign * (a[key] - b[key])\r\n        : (a, b) => sign * a[key].localeCompare(b[key]);\r\n\r\n    newPhones = [...items].sort(sortFn);\r\n\r\n    this.setState({\r\n      items: newPhones,\r\n      sortAsc: !sortAsc\r\n    });\r\n  };\r\n\r\n  // pagination\r\n  handlePageChange = page => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  paginateItems = ({ items, perPage, page }) => {\r\n    const start = (page - 1) * perPage; // 11\r\n    const end = start + perPage;\r\n\r\n    return items && items.slice(start, end);\r\n  };\r\n\r\n  //search\r\n  handleChangeQuery = event => {\r\n    this.setState({\r\n      visibleQuery: event.target.value\r\n    });\r\n    this.updateQuery(event.target.value);\r\n  };\r\n\r\n  setParams({ query }) {\r\n    const searchParams = new URLSearchParams();\r\n    searchParams.set(\"query\", query || \"\");\r\n    return searchParams.toString();\r\n  }\r\n\r\n  updateQuery = debounce(query => {\r\n    const url = this.setParams({ query });\r\n    this.props.history.push(`?${url}`);\r\n\r\n    if (!query) {\r\n      window.history.replaceState({}, \"\", this.props.location.pathname);\r\n    }\r\n\r\n    this.setState({\r\n      query,\r\n      page: 1\r\n    });\r\n  }, 1000);\r\n\r\n  // check\r\n  handleCheck = event => {\r\n    const { checkedItems } = this.state;\r\n    const id = event.target.value;\r\n    let newArr = [];\r\n    if (checkedItems.includes(id)) {\r\n      newArr = checkedItems.filter(item => item !== id);\r\n    } else {\r\n      newArr = [...checkedItems, id];\r\n    }\r\n\r\n    this.setState({\r\n      checkedItems: newArr\r\n    });\r\n  };\r\n\r\n  handleMainCheck = event => {\r\n    const { items, query } = this.state;\r\n\r\n    const filteredItems = items.filter(\r\n      item =>\r\n        item.name.toLowerCase().includes(query.toLowerCase()) ||\r\n        item.snippet.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n\r\n    let newArr = [];\r\n    if (event.target.checked) {\r\n      newArr = filteredItems.map(item => item.id);\r\n    }\r\n    this.setState({\r\n      checkedItems: newArr,\r\n      isMainChecked: event.target.checked\r\n    });\r\n  };\r\n\r\n  handleShowAllChecked = () => {\r\n    let { showChecked, query, visibleQuery } = this.state;\r\n\r\n    if (showChecked) {\r\n      query = \"\";\r\n      visibleQuery = \"\";\r\n    }\r\n\r\n    this.setState({ showChecked: !showChecked, query, visibleQuery });\r\n  };\r\n\r\n  getfilteredItems = ({ items, query, showChecked }) => {\r\n    const { checkedItems } = this.state;\r\n\r\n    const filtered =\r\n      items &&\r\n      items.filter(\r\n        item =>\r\n          item.name.toLowerCase().includes(query.toLowerCase()) ||\r\n          item.snippet.toLowerCase().includes(query.toLowerCase())\r\n      );\r\n\r\n    if (showChecked) {\r\n      return filtered.filter(item => checkedItems.includes(item.id));\r\n    }\r\n    return filtered;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isLoaded,\r\n      perPage,\r\n      items,\r\n      page,\r\n      query,\r\n      visibleQuery,\r\n      checkedItems,\r\n      showChecked\r\n    } = this.state;\r\n\r\n    const filteredItems = this.getfilteredItems({\r\n      items,\r\n      query,\r\n      showChecked\r\n    });\r\n\r\n    const visibleItems = this.paginateItems({\r\n      items: filteredItems,\r\n      perPage,\r\n      page\r\n    });\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {isLoaded && (\r\n          <div className=\"clearfix\">\r\n            <div className=\"Catalog float-left\">\r\n              <Pagination\r\n                isTop={true}\r\n                count={isLoaded && filteredItems.length}\r\n                onPageChange={this.handlePageChange}\r\n                perPage={perPage}\r\n                page={page}\r\n                onPerPageChange={this.handlePerPageChange}\r\n              />\r\n\r\n              <DataTable\r\n                visibleItems={visibleItems}\r\n                checkedItems={checkedItems}\r\n                filteredItems={filteredItems}\r\n                showChecked={showChecked}\r\n                perPage={perPage}\r\n                onHandleCheck={this.handleCheck.bind(this)}\r\n                onHeaderClick={this.handleHeaderClick.bind(this)}\r\n                onMainCheck={this.handleMainCheck.bind(this)}\r\n                onShowAllChecked={this.handleShowAllChecked.bind(this)}\r\n                onPerPageChange={this.handlePerPageChange.bind(this)}\r\n              />\r\n              <Pagination\r\n                isTop={false}\r\n                count={isLoaded && filteredItems.length}\r\n                onPageChange={this.handlePageChange}\r\n                perPage={perPage}\r\n                page={page}\r\n                onPerPageChange={this.handlePerPageChange}\r\n              />\r\n              <Search\r\n                onChangeQuery={this.handleChangeQuery}\r\n                visibleQuery={visibleQuery}\r\n              />\r\n            </div>\r\n            <Route path=\"/:phone\" component={Phone} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nimport App from \"./App\";\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Route component={App} />\n  </BrowserRouter>,\n  rootElement\n);\n"],"sourceRoot":""}