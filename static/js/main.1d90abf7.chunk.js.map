{"version":3,"sources":["App.js","index.js"],"names":["App","state","phones","filteredItems","isQuery","fetch","response","json","data","this","setState","value","query","_this$state","filteredPhones","filter","phone","name","toLowerCase","includes","phonesArr","sort","a","b","age","localeCompare","_this$state2","renderData","renderLoading","_this2","console","log","length","react_default","createElement","Fragment","className","type","onChange","event","handleFilter","target","defaultChecked","onClick","map","item","key","id","snippet","Component","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"uPA8GeA,6MAxGbC,MAAQ,CACNC,OAAQ,GACRC,cAAe,GACfC,QAAS,uNAIcC,MAVzB,0FAUQC,kBACaA,EAASC,cAAtBC,SAENC,KAAKC,SAAS,CACZR,OAAQM,2IAICG,EAAOC,GAAO,IAAAC,EACgBJ,KAAKR,MAAxCG,EADmBS,EACnBT,QAASF,EADUW,EACVX,OAEXY,GAHqBD,EACFV,cAEF,KAErBC,EAAWQ,GAAQR,KAGjBU,EAAiBZ,EAAOa,OAAO,SAAAC,GAC7B,OAAOA,EAAMC,KAAKC,cAAcC,SAASf,MAI7C,IAAMgB,EAAwB,KAAZhB,EAAiBU,EAAiBZ,EAEtC,QAAVS,EACFG,EAAiBM,EAAUC,KAAK,SAACC,EAAGC,GAClC,OAAOD,EAAEE,IAAMD,EAAEC,MAEA,SAAVb,IACTG,EAAiBM,EAAUC,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEL,KAAKQ,cAAcF,EAAEN,SAGnER,KAAKC,SAAS,CACZP,cAAeW,EACfV,6CAIK,IAAAsB,EACoCjB,KAAKR,MAAxCC,EADDwB,EACCxB,OAAQC,EADTuB,EACSvB,cAAeC,EADxBsB,EACwBtB,QAE/B,OAAOF,EACHO,KAAKkB,WAAWzB,EAAQC,EAAeC,GACvCK,KAAKmB,mDAGA1B,EAAQC,EAAeC,GAAS,IAAAyB,EAAApB,KAGzC,OAFAqB,QAAQC,IAAI3B,GACZF,EAASE,GAAWD,EAAc6B,OAAS7B,EAAgBD,EAEzD+B,EAAAX,EAAAY,cAAAD,EAAAX,EAAAa,SAAA,KACEF,EAAAX,EAAAY,cAAA,OAAKE,UAAU,YACbH,EAAAX,EAAAY,cAAA,SACEE,UAAU,QACVC,KAAK,OACLC,SAAU,SAAAC,GACRV,EAAKW,aAAa,QAASD,EAAME,OAAO9B,QAE1C+B,gBAAc,KAGlBT,EAAAX,EAAAY,cAAA,aACED,EAAAX,EAAAY,cAAA,aACED,EAAAX,EAAAY,cAAA,UACED,EAAAX,EAAAY,cAAA,MAAIS,QAAS,kBAAMd,EAAKW,aAAa,UACnCP,EAAAX,EAAAY,cAAA,QAAME,UAAU,UAAhB,SAEFH,EAAAX,EAAAY,cAAA,MAAIE,UAAU,SAASO,QAAS,kBAAMd,EAAKW,aAAa,SACtDP,EAAAX,EAAAY,cAAA,QAAME,UAAU,UAAhB,QAGFH,EAAAX,EAAAY,cAAA,uBAGJD,EAAAX,EAAAY,cAAA,aACGhC,GAAUA,EAAO8B,OAChB9B,EAAO0C,IAAI,SAAAC,GAAI,OACbZ,EAAAX,EAAAY,cAAA,MAAIY,IAAKD,EAAKE,IACZd,EAAAX,EAAAY,cAAA,UAAKW,EAAK5B,MACVgB,EAAAX,EAAAY,cAAA,UAAKW,EAAKrB,KACVS,EAAAX,EAAAY,cAAA,UAAKW,EAAKG,YAIdf,EAAAX,EAAAY,cAAA,UACED,EAAAX,EAAAY,cAAA,wEASZ,OAAOD,EAAAX,EAAAY,cAAA,gCArGOe,aCCZC,SAAcC,SAASC,eAAe,SAC5CC,IAASC,OAAOrB,EAAAX,EAAAY,cAACqB,EAAD,MAASL","file":"static/js/main.1d90abf7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst url =\n  \"https://mate-academy.github.io/phone-catalogue-static/phones/phones.json\";\n\nclass App extends Component {\n  state = {\n    phones: [],\n    filteredItems: [],\n    isQuery: \"\"\n  };\n\n  async componentDidMount() {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    this.setState({\n      phones: data\n    });\n  }\n\n  handleFilter(value, query) {\n    let { isQuery, phones, filteredItems } = this.state;\n\n    let filteredPhones = [];\n\n    isQuery = !query ? isQuery : query;\n\n    if (isQuery) {\n      filteredPhones = phones.filter(phone => {\n        return phone.name.toLowerCase().includes(isQuery);\n      });\n    }\n\n    const phonesArr = isQuery !== \"\" ? filteredPhones : phones;\n\n    if (value === \"age\") {\n      filteredPhones = phonesArr.sort((a, b) => {\n        return a.age - b.age;\n      });\n    } else if (value === \"name\") {\n      filteredPhones = phonesArr.sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    this.setState({\n      filteredItems: filteredPhones,\n      isQuery\n    });\n  }\n\n  render() {\n    const { phones, filteredItems, isQuery } = this.state;\n\n    return phones\n      ? this.renderData(phones, filteredItems, isQuery)\n      : this.renderLoading();\n  }\n\n  renderData(phones, filteredItems, isQuery) {\n    console.log(isQuery);\n    phones = isQuery || filteredItems.length ? filteredItems : phones;\n    return (\n      <>\n        <div className=\"clearfix\">\n          <input\n            className=\"Query\"\n            type=\"text\"\n            onChange={event => {\n              this.handleFilter(\"query\", event.target.value);\n            }}\n            defaultChecked\n          />\n        </div>\n        <table>\n          <thead>\n            <tr>\n              <th onClick={() => this.handleFilter(\"name\")}>\n                <span className=\"Filter\">name</span>\n              </th>\n              <th className=\"Filter\" onClick={() => this.handleFilter(\"age\")}>\n                <span className=\"Filter\">age</span>\n              </th>\n\n              <th>snippet</th>\n            </tr>\n          </thead>\n          <tbody>\n            {phones && phones.length ? (\n              phones.map(item => (\n                <tr key={item.id}>\n                  <td>{item.name}</td>\n                  <td>{item.age}</td>\n                  <td>{item.snippet}</td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td>No items found</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n  renderLoading() {\n    return <div>Loading...</div>;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}