{"version":3,"sources":["App.js","index.js"],"names":["App","state","phones","filteredItems","isQuery","fetch","response","json","data","this","setState","value","query","_this$state","filteredPhones","filter","phone","name","toLowerCase","includes","phonesArr","sort","a","b","age","localeCompare","_this$state2","renderData","renderLoading","_this2","length","react_default","createElement","Fragment","type","onChange","event","handleFilter","target","defaultChecked","onClick","className","map","item","key","id","snippet","Component","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"uPA0GeA,6MApGbC,MAAQ,CACNC,OAAQ,GACRC,cAAe,GACfC,QAAS,uNAIcC,MAVzB,0FAUQC,kBACaA,EAASC,cAAtBC,SAENC,KAAKC,SAAS,CACZR,OAAQM,2IAICG,EAAOC,GAAO,IAAAC,EACCJ,KAAKR,MAAzBG,EADmBS,EACnBT,QAASF,EADUW,EACVX,OAEXY,EAAiB,IAErBV,EAAWQ,GAAQR,KAGjBU,EAAiBZ,EAAOa,OAAO,SAAAC,GAC7B,OAAOA,EAAMC,KAAKC,cAAcC,SAASf,MAI7C,IAAMgB,EAAwB,KAAZhB,EAAiBU,EAAiBZ,EAEtC,QAAVS,EACFG,EAAiBM,EAAUC,KAAK,SAACC,EAAGC,GAClC,OAAOD,EAAEE,IAAMD,EAAEC,MAEA,SAAVb,IACTG,EAAiBM,EAAUC,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEL,KAAKQ,cAAcF,EAAEN,SAGnER,KAAKC,SAAS,CACZP,cAAeW,EACfV,6CAIK,IAAAsB,EAC2BjB,KAAKR,MAA/BC,EADDwB,EACCxB,OAAQC,EADTuB,EACSvB,cAEhB,OAAOD,EACHO,KAAKkB,WAAWzB,EAAQC,GACxBM,KAAKmB,mDAGA1B,EAAQC,GAAe,IAAA0B,EAAApB,KAEhC,OADAP,EAAkC,IAAzBC,EAAc2B,OAAe3B,EAAgBD,EAEpD6B,EAAAT,EAAAU,cAAAD,EAAAT,EAAAW,SAAA,KACEF,EAAAT,EAAAU,cAAA,SACEE,KAAK,OACLC,SAAU,SAAAC,GACRP,EAAKQ,aAAa,QAASD,EAAME,OAAO3B,QAE1C4B,gBAAc,IAEhBR,EAAAT,EAAAU,cAAA,aACED,EAAAT,EAAAU,cAAA,aACED,EAAAT,EAAAU,cAAA,UACED,EAAAT,EAAAU,cAAA,MAAIQ,QAAS,kBAAMX,EAAKQ,aAAa,UACnCN,EAAAT,EAAAU,cAAA,QAAMS,UAAU,UAAhB,SAEFV,EAAAT,EAAAU,cAAA,MAAIS,UAAU,SAASD,QAAS,kBAAMX,EAAKQ,aAAa,SACtDN,EAAAT,EAAAU,cAAA,QAAMS,UAAU,UAAhB,QAGFV,EAAAT,EAAAU,cAAA,uBAGJD,EAAAT,EAAAU,cAAA,aACG9B,GAAUA,EAAO4B,OAChB5B,EAAOwC,IAAI,SAAAC,GAAI,OACbZ,EAAAT,EAAAU,cAAA,MAAIY,IAAKD,EAAKE,IACZd,EAAAT,EAAAU,cAAA,UAAKW,EAAK1B,MACVc,EAAAT,EAAAU,cAAA,UAAKW,EAAKnB,KACVO,EAAAT,EAAAU,cAAA,UAAKW,EAAKG,YAIdf,EAAAT,EAAAU,cAAA,UACED,EAAAT,EAAAU,cAAA,wEASZ,OAAOD,EAAAT,EAAAU,cAAA,gCAjGOe,aCCZC,SAAcC,SAASC,eAAe,SAC5CC,IAASC,OAAOrB,EAAAT,EAAAU,cAACqB,EAAD,MAASL","file":"static/js/main.bd992d1d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst url =\n  \"https://mate-academy.github.io/phone-catalogue-static/phones/phones.json\";\n\nclass App extends Component {\n  state = {\n    phones: [],\n    filteredItems: [],\n    isQuery: \"\"\n  };\n\n  async componentDidMount() {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    this.setState({\n      phones: data\n    });\n  }\n\n  handleFilter(value, query) {\n    let { isQuery, phones } = this.state;\n\n    let filteredPhones = [];\n\n    isQuery = !query ? isQuery : query;\n\n    if (isQuery) {\n      filteredPhones = phones.filter(phone => {\n        return phone.name.toLowerCase().includes(isQuery);\n      });\n    }\n\n    const phonesArr = isQuery !== \"\" ? filteredPhones : phones;\n\n    if (value === \"age\") {\n      filteredPhones = phonesArr.sort((a, b) => {\n        return a.age - b.age;\n      });\n    } else if (value === \"name\") {\n      filteredPhones = phonesArr.sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    this.setState({\n      filteredItems: filteredPhones,\n      isQuery\n    });\n  }\n\n  render() {\n    const { phones, filteredItems } = this.state;\n\n    return phones\n      ? this.renderData(phones, filteredItems)\n      : this.renderLoading();\n  }\n\n  renderData(phones, filteredItems) {\n    phones = filteredItems.length !== 0 ? filteredItems : phones;\n    return (\n      <>\n        <input\n          type=\"text\"\n          onChange={event => {\n            this.handleFilter(\"query\", event.target.value);\n          }}\n          defaultChecked\n        />\n        <table>\n          <thead>\n            <tr>\n              <th onClick={() => this.handleFilter(\"name\")}>\n                <span className=\"Filter\">name</span>\n              </th>\n              <th className=\"Filter\" onClick={() => this.handleFilter(\"age\")}>\n                <span className=\"Filter\">age</span>\n              </th>\n\n              <th>snippet</th>\n            </tr>\n          </thead>\n          <tbody>\n            {phones && phones.length ? (\n              phones.map(item => (\n                <tr key={item.id}>\n                  <td>{item.name}</td>\n                  <td>{item.age}</td>\n                  <td>{item.snippet}</td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td>No items found</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n  renderLoading() {\n    return <div>Loading...</div>;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}