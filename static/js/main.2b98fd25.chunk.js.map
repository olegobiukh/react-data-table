{"version":3,"sources":["App.js","index.js"],"names":["App","state","phones","fetch","response","json","data","this","setState","value","filteredPhones","sort","a","b","age","name","localeCompare","renderData","renderLoading","_this2","length","react_default","createElement","onClick","handleFilter","className","map","item","key","id","snippet","Component","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"uPA4EeA,6MAtEbC,MAAQ,CACNC,OAAQ,uNAIeC,MARzB,0FAQQC,kBACaA,EAASC,cAAtBC,SAENC,KAAKC,SAAS,CACZN,OAAQI,2IAICG,GAAO,IACVP,EAAWK,KAAKN,MAAhBC,OACJQ,EAAiB,GAGnBA,EADY,QAAVD,EACeP,EAAOS,KAAK,SAACC,EAAGC,GAC/B,OAAOD,EAAEE,IAAMD,EAAEC,MAGFZ,EAAOS,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,KAAKC,cAAcH,EAAEE,QAEhER,KAAKC,SAAS,CACZN,OAAQQ,qCAIH,IACCR,EAAWK,KAAKN,MAAhBC,OAER,OAAOA,EAASK,KAAKU,WAAWf,GAAUK,KAAKW,mDAGtChB,GAAQ,IAAAiB,EAAAZ,KACjB,OAAIL,GAAUA,EAAOkB,OAEjBC,EAAAT,EAAAU,cAAA,aACED,EAAAT,EAAAU,cAAA,aACED,EAAAT,EAAAU,cAAA,UACED,EAAAT,EAAAU,cAAA,MAAIC,QAAS,kBAAMJ,EAAKK,aAAa,UACnCH,EAAAT,EAAAU,cAAA,QAAMG,UAAU,UAAhB,SAEFJ,EAAAT,EAAAU,cAAA,MAAIG,UAAU,SAASF,QAAS,kBAAMJ,EAAKK,aAAa,SACtDH,EAAAT,EAAAU,cAAA,QAAMG,UAAU,UAAhB,QAEFJ,EAAAT,EAAAU,cAAA,uBAGJD,EAAAT,EAAAU,cAAA,aACGpB,EAAOwB,IAAI,SAAAC,GAAI,OACdN,EAAAT,EAAAU,cAAA,MAAIM,IAAKD,EAAKE,IACZR,EAAAT,EAAAU,cAAA,UAAKK,EAAKZ,MACVM,EAAAT,EAAAU,cAAA,UAAKK,EAAKb,KACVO,EAAAT,EAAAU,cAAA,UAAKK,EAAKG,cAObT,EAAAT,EAAAU,cAAA,qEAIT,OAAOD,EAAAT,EAAAU,cAAA,gCAnEOS,aCCZC,SAAcC,SAASC,eAAe,SAC5CC,IAASC,OAAOf,EAAAT,EAAAU,cAACe,EAAD,MAASL","file":"static/js/main.2b98fd25.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst url =\n  \"https://mate-academy.github.io/phone-catalogue-static/phones/phones.json\";\n\nclass App extends Component {\n  state = {\n    phones: []\n  };\n\n  async componentDidMount() {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    this.setState({\n      phones: data\n    });\n  }\n\n  handleFilter(value) {\n    const { phones } = this.state;\n    let filteredPhones = [];\n\n    if (value === \"age\") {\n      filteredPhones = phones.sort((a, b) => {\n        return a.age - b.age;\n      });\n    } else {\n      filteredPhones = phones.sort((a, b) => a.name.localeCompare(b.name));\n    }\n    this.setState({\n      phones: filteredPhones\n    });\n  }\n\n  render() {\n    const { phones } = this.state;\n\n    return phones ? this.renderData(phones) : this.renderLoading();\n  }\n\n  renderData(phones) {\n    if (phones && phones.length) {\n      return (\n        <table>\n          <thead>\n            <tr>\n              <th onClick={() => this.handleFilter(\"name\")}>\n                <span className=\"Filter\">name</span>\n              </th>\n              <th className=\"Filter\" onClick={() => this.handleFilter(\"age\")}>\n                <span className=\"Filter\">age</span>\n              </th>\n              <th>snippet</th>\n            </tr>\n          </thead>\n          <tbody>\n            {phones.map(item => (\n              <tr key={item.id}>\n                <td>{item.name}</td>\n                <td>{item.age}</td>\n                <td>{item.snippet}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      );\n    } else {\n      return <div>No items found</div>;\n    }\n  }\n  renderLoading() {\n    return <div>Loading...</div>;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}